name: Deploy Image
on:
    push:
    workflow_dispatch:
        inputs:
            tag:
                description: 'Image tag to deploy'
                required: true
                #default: 'v1.0.0'
            namespace:
                description: 'Namespace to deploy'
                required: false
                default: 'dev'
jobs:
    Deploy-Image:

    runs-on: ubuntu-latest
    #if: startsWith(github.event.head_commit.message, 'release')
    #if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    steps:
        - name: Set ENV Variables
          run: |
            export REP_NAME=$(echo ${{github.repository}} | awk '{split($0,a,"/"); print a[2]}')
            echo "REP_NAME=$REP_NAME" >> $GITHUB_ENV
            export CONTAINER_TAG=${{ github.event.inputs.tag }}
            #echo "CONTAINER_TAG=$CONTAINER_TAG" >> $GITHUB_ENV
            export REGISTRY=test.compendium.sovereignnature.ch
            echo "REGISTRY=$REGISTRY" >> $GITHUB_ENV
            echo "FULL_TAG=$REGISTRY/$REP_NAME:$CONTAINER_TAG" >> $GITHUB_ENV

        - name: Configure Deployment File
          run: sed -i "s/%CONTAINER_TAG%/${{ env.FULL_TAG }}/g" deployment/deploy-api.yml

        - name: Deploy to Cluster
          uses: actions-hub/kubectl@master
          env:
            KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
          with:
            args: apply -f deployment/deploy-api.yml -n ${{ env.REP_NAME }}-${{ github.event.inputs.namespace }}

        # Force restart
        #- name: Rollout
        #  uses: actions-hub/kubectl@master
        #  env:
        #    KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        #  with:
        #    args: rollout restart deployment ${{ env.REP_NAME }}-deployment -n ${{ env.REP_NAME }}-dev
        #- run: echo "This job's status is ${{ job.status }}."
